import express, { Application, Request, Response, NextFunction } from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import userRoutes from './routes/users';
import companyRoutes from './routes/companies';

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const app: Application = express();
const PORT: number = parseInt(process.env.PORT || '3000', 10);

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—à–∏–±–∫–∏
interface CustomError extends Error {
  status?: number;
}

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req: Request, res: Response, next: NextFunction): void => {
  console.log(`${new Date().toISOString()} - ${req.method} ${req.path}`);
  next();
});

// –†–æ—É—Ç—ã
app.use('/api/users', userRoutes);
app.use('/api/companies', companyRoutes);

// –ö–æ—Ä–Ω–µ–≤–æ–π —Ä–æ—É—Ç
app.get('/', (req: Request, res: Response): void => {
  res.json({
    message: 'Node.js API Server with TypeScript',
    version: '1.0.0',
    endpoints: [
      'GET /api/users - –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      'GET /api/users/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      'GET /api/users/:id - –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID',
      'POST /api/users - –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      'PUT /api/users/:id - –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      'DELETE /api/users/:id - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      '',
      'GET /api/companies - –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–æ–º–ø–∞–Ω–∏–∏',
      'GET /api/companies/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–ø–∞–Ω–∏–π',
      'GET /api/companies/:id - –ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é –ø–æ ID',
      'POST /api/companies - –°–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—é',
      'PUT /api/companies/:id - –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é',
      'DELETE /api/companies/:id - –£–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é',
      'POST /api/companies/:id/employees - –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞',
      'DELETE /api/companies/:id/employees/:userId - –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'
    ]
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ—É—Ç–æ–≤
app.use('*', (req: Request, res: Response): void => {
  res.status(404).json({
    success: false,
    message: '–†–æ—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'
  });
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.use((error: CustomError, req: Request, res: Response, next: NextFunction): void => {
  console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  
  const status = error.status || 500;
  const message = error.message || '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞';
  
  res.status(status).json({
    success: false,
    message,
    ...(process.env.NODE_ENV === 'development' && { stack: error.stack })
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, (): void => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
  console.log(`üìù API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ http://localhost:${PORT}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
process.on('uncaughtException', (error: Error): void => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
  process.exit(1);
});

process.on('unhandledRejection', (reason: unknown, promise: Promise<unknown>): void => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', reason);
  process.exit(1);
});

export default app;