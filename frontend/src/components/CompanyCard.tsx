import React from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { companyAPI, apiUtils } from '@/api/index';
import { CompanyCardProps, COMPANY_STATUS_LABELS } from '@/types';

const CompanyCard: React.FC<CompanyCardProps> = ({ company, onEdit }) => {
  const queryClient = useQueryClient();

  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏
  const deleteMutation = useMutation({
    mutationFn: (id: number) => companyAPI.deleteCompany(id),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['companies'] });
      queryClient.invalidateQueries({ queryKey: ['companyStats'] });
      alert('–ö–æ–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!');
    },
    onError: (error: unknown) => {
      const message = apiUtils.getErrorMessage(error);
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: ${message}`);
    },
  });

  const handleDelete = (): void => {
    if (window.confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é "${company.name}"?`)) {
      deleteMutation.mutate(company.id);
    }
  };

  const formatDate = (dateString: string): string => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU');
  };

  return (
    <div className="card">
      <div className="card-header">
        <h3>{company.name}</h3>
        <span className={`status status-${company.status}`}>
          {COMPANY_STATUS_LABELS[company.status]}
        </span>
      </div>

      <div className="card-body">
        <div className="card-row">
          <strong>–ò–ù–ù:</strong>
          <span>{company.idn}</span>
        </div>

        {company.address && (
          <div className="card-row">
            <strong>–ê–¥—Ä–µ—Å:</strong>
            <span>{company.address}</span>
          </div>
        )}

        <div className="card-row">
          <strong>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:</strong>
          <span>{company.users.length}</span>
        </div>

        {company.users.length > 0 && (
          <div className="card-section">
            <strong>–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:</strong>
            <ul className="employee-list">
              {company.users.map((employee) => (
                <li key={employee.userId}>
                  {employee.userName} (ID: {employee.userId})
                </li>
              ))}
            </ul>
          </div>
        )}

        <div className="card-row">
          <strong>–°–æ–∑–¥–∞–Ω–∞:</strong>
          <span>{formatDate(company.created_at)}</span>
        </div>

        <div className="card-row">
          <strong>–û–±–Ω–æ–≤–ª–µ–Ω–∞:</strong>
          <span>{formatDate(company.updated_at)}</span>
        </div>
      </div>

      <div className="card-actions">
        <button
          className="btn btn-edit"
          onClick={() => onEdit(company)}
          disabled={deleteMutation.isPending}
        >
          ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        </button>
        <button
          className="btn btn-delete"
          onClick={handleDelete}
          disabled={deleteMutation.isPending}
        >
          {deleteMutation.isPending ? '‚è≥ –£–¥–∞–ª–µ–Ω–∏–µ...' : 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å'}
        </button>
      </div>
    </div>
  );
};

export default CompanyCard;
